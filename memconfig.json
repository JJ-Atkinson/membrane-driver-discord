{
  "expressions": {
    "guild": {
      "description": "Guild",
      "type": "text",
      "searchIn": "https://discord.com",
      "regex": "data-list-item-id=\"guildsnav___([0-9]{18})+"
    },
    "channel": {
      "description": "Channel",
      "type": "url",
      "searchIn": "https://discord.com",
      "regex": "https://discord.com/channels/([0-9]{18})+/([0-9]{18})+"
    },
    "user": {
      "description": "User",
      "type": "text",
      "searchIn": "https://discord.com",
      "regex": "/avatars/[0-9]+"
    },
    "message": {
      "description": "Channel Message",
      "type": "text",
      "searchIn": "https://discord.com",
      "regex": "id=\"chat-messages-[0-9]+-[0-9]+"
    }
  },
  "schema": {
    "types": [
      {
        "name": "Root",
        "fields": [
          {
            "name": "guilds",
            "type": "GuildCollection",
            "description": "Collection of Discord guilds where the bot is active."
          },
          {
            "name": "me",
            "type": "User",
            "description": "Represents the bot's user profile within Discord."
          },
          {
            "name": "users",
            "type": "UserCollection",
            "description": "Accumulated collection of users that the bot has encountered."
          },
          {
            "name": "parse",
            "type": "List",
            "hints": {
              "hidden": true
            },
            "ofType": {
              "type": "Ref",
              "ofType": "Guild"
            },
            "params": [
              {
                "name": "name",
                "type": "String"
              },
              {
                "name": "value",
                "type": "String"
              }
            ],
            "description": "Interprets the provided name and value as a guild reference in Discord."
          },
          {
            "name": "status",
            "type": "String",
            "description": "Reflects the bot's current operational status."
          },
          {
            "name": "tests",
            "type": "Tests",
            "description": "Comprises tests for ensuring the bot's correct functionality."
          }
        ],
        "actions": [
          {
            "name": "configure",
            "type": "Void",
            "params": [
              {
                "name": "clientId",
                "type": "String",
                "optional": true
              },
              {
                "name": "clientSecret",
                "type": "String",
                "optional": true
              },
              {
                "name": "publicKey",
                "type": "String",
                "optional": true
              },
              {
                "name": "token",
                "type": "String",
                "optional": true
              }
            ],
            "description": "Sets up the necessary configurations for the Discord Bot such as clientId, clientSecret, publicKey, and token."
          },
          {
            "name": "followUpWebhook",
            "type": "Void",
            "params": [
              {
                "name": "application_id",
                "type": "String"
              },
              {
                "name": "token",
                "type": "String"
              },
              {
                "name": "message",
                "type": "Json"
              }
            ],
            "description": "Sends a follow-up message to an interaction using a webhook."
          }
        ],
        "description": ""
      },
      {
        "name": "MemberCollection",
        "fields": [
          {
            "name": "one",
            "type": "Member",
            "params": [
              {
                "name": "id",
                "type": "String"
              }
            ],
            "description": "Retrieves a single member based on their unique Discord ID."
          },
          {
            "name": "page",
            "type": "MemberPage",
            "params": [
              {
                "name": "limit",
                "type": "Int",
                "optional": true
              },
              {
                "name": "after",
                "type": "String",
                "optional": true
              }
            ],
            "description": "Obtains a paginated list of members, with options to limit the batch size and specify the starting point."
          }
        ],
        "description": ""
      },
      {
        "name": "MemberPage",
        "fields": [
          {
            "name": "items",
            "type": "List",
            "ofType": "Member",
            "description": "List of Discord members contained in the current page."
          },
          {
            "name": "next",
            "type": "Ref",
            "ofType": "MemberPage",
            "description": "Reference to the next page of members, if more pages exist."
          }
        ],
        "description": ""
      },
      {
        "name": "CommandCollection",
        "fields": [
          {
            "name": "one",
            "type": "Command",
            "params": [
              {
                "name": "id",
                "type": "String"
              }
            ],
            "description": "Retrieves a specific command using its Discord-assigned ID."
          },
          {
            "name": "items",
            "type": "List",
            "ofType": "Command",
            "description": "A complete list of commands that the Discord bot can execute."
          }
        ],
        "description": ""
      },
      {
        "name": "UserCollection",
        "fields": [
          {
            "name": "one",
            "type": "User",
            "params": [
              {
                "name": "id",
                "type": "String"
              }
            ],
            "description": "Retrieves user information for a single Discord user by their ID."
          }
        ],
        "description": ""
      },
      {
        "name": "GuildCollection",
        "fields": [
          {
            "name": "one",
            "type": "Guild",
            "params": [
              {
                "name": "id",
                "type": "String"
              }
            ],
            "description": "Acquires detailed information for a specific guild using its unique Discord ID."
          },
          {
            "name": "items",
            "type": "List",
            "ofType": "Guild",
            "description": "Aggregates all guilds for which the bot is a member."
          }
        ],
        "description": ""
      },
      {
        "name": "Guild",
        "fields": [
          {
            "name": "id",
            "type": "String",
            "description": "The Discord-assigned unique identifier of the guild."
          },
          {
            "name": "name",
            "type": "String",
            "hints": {
              "primary": true
            },
            "description": "Officially recognized name of the Discord guild."
          },
          {
            "name": "icon",
            "type": "String",
            "description": "Link to the image used as the guild's icon."
          },
          {
            "name": "owner",
            "type": "Boolean",
            "description": "Flag to determine if the bot owns the guild."
          },
          {
            "name": "permissions",
            "type": "Int",
            "description": "The set of permissions the bot possesses in this guild, expressed as an integer value."
          },
          {
            "name": "features",
            "type": "List",
            "ofType": "String",
            "description": "List of unique features that the guild offers."
          },
          {
            "name": "channels",
            "type": "ChannelCollection",
            "description": "All the channels available in the guild."
          },
          {
            "name": "commands",
            "type": "CommandCollection",
            "description": "A compilation of all bot commands that are usable within this guild."
          },
          {
            "name": "members",
            "type": "MemberCollection",
            "description": "An array of members that are part of the guild."
          }
        ],
        "actions": [
          {
            "name": "createCommand",
            "type": "Void",
            "params": [
              {
                "name": "name",
                "type": "String"
              },
              {
                "name": "description",
                "type": "String",
                "optional": true
              },
              {
                "name": "options",
                "description": "",
                "type": "Json",
                "optional": true
              },
              {
                "name": "type",
                "type": "Int",
                "optional": true
              }
            ],
            "description": "Creates a new command in the guild with the given details, including name, description, options, and command type."
          }
        ],
        "events": [
          {
            "name": "onSlashCommand",
            "type": "SlashCommand"
          }
        ],
        "description": ""
      },
      {
        "name": "ChannelCollection",
        "fields": [
          {
            "name": "one",
            "type": "Channel",
            "params": [
              {
                "name": "id",
                "type": "String"
              }
            ],
            "description": "Retrieves a single channel by its unique Discord identifier."
          },
          {
            "name": "items",
            "type": "List",
            "ofType": "Channel",
            "description": "An array of all channels that the bot can access, including text, voice, and DM channels."
          }
        ],
        "description": ""
      },
      {
        "name": "MessageCollection",
        "fields": [
          {
            "name": "one",
            "type": "Message",
            "params": [
              {
                "name": "id",
                "type": "String"
              }
            ],
            "description": "Acquires information for an individual message by its Discord ID."
          },
          {
            "name": "items",
            "type": "List",
            "ofType": "Message",
            "params": [
              {
                "name": "limit",
                "type": "Int",
                "optional": true
              },
              {
                "name": "around",
                "type": "String",
                "optional": true
              },
              {
                "name": "before",
                "type": "String",
                "optional": true
              },
              {
                "name": "after",
                "type": "String",
                "optional": true
              }
            ],
            "description": "Retrieves a collection of messages with optional parameters for limiting number and specifying position."
          }
        ],
        "description": ""
      },
      {
        "name": "Channel",
        "fields": [
          {
            "name": "id",
            "type": "String",
            "description": "The Discord-given unique ID for this channel."
          },
          {
            "name": "last_message_id",
            "type": "String",
            "description": "Identifier for the latest message sent in this channel."
          },
          {
            "name": "rate_limit_per_user",
            "type": "Int",
            "description": "Amount of time a user must wait before sending another message in this channel (rate limiting)."
          },
          {
            "name": "name",
            "type": "String",
            "hints": {
              "primary": true
            },
            "description": "The name assigned to this channel within Discord."
          },
          {
            "name": "type",
            "type": "Int",
            "description": "Indicates the channel category, such as text, voice, or category channel."
          },
          {
            "name": "position",
            "type": "Int",
            "description": "The placement of this channel in the server's channel hierarchy."
          },
          {
            "name": "flags",
            "type": "Int",
            "description": "Special attributes and functionalities of this channel identified by flag bits."
          },
          {
            "name": "nsfw",
            "type": "Boolean",
            "description": "Whether the channel contains content that is inappropriate for underage users."
          },
          {
            "name": "parend_id",
            "type": "String",
            "description": "Discord ID of the channel's parent category, if any."
          },
          {
            "name": "topic",
            "type": "String",
            "description": "The subject or specific purpose of the channel outlined in a brief description."
          },
          {
            "name": "guild_id",
            "type": "String",
            "description": "Identifier of the guild in which this channel resides."
          },
          {
            "name": "permissions_overwrites",
            "type": "List",
            "ofType": "String",
            "description": "A collection of permissions adjustments specific to this channel."
          },
          {
            "name": "messages",
            "type": "MessageCollection",
            "description": "Provides access to a searchable collection of messages in the channel."
          }
        ],
        "actions": [
          {
            "name": "sendMessage",
            "type": "Void",
            "params": [
              {
                "name": "content",
                "description": "",
                "type": "String"
              },
              {
                "name": "payload_json",
                "description": "",
                "type": "String",
                "optional": true
              },
              {
                "name": "tts",
                "type": "Boolean",
                "optional": true
              },
              {
                "name": "flags",
                "type": "Int",
                "optional": true
              },
              {
                "name": "sticker_ids",
                "description": "",
                "type": "String",
                "optional": true
              },
              {
                "name": "components",
                "description": "",
                "type": "String",
                "optional": true
              },
              {
                "name": "embeds",
                "description": "",
                "type": "String",
                "optional": true
              }
            ],
            "description": "Sends a message to the channel, with optional parameters such as content, payload_json, tts, flags, sticker_ids, components, and embeds."
          }
        ],
        "description": ""
      },
      {
        "name": "Message",
        "fields": [
          {
            "name": "id",
            "type": "String",
            "description": "The unique identifier of the message."
          },
          {
            "name": "type",
            "type": "Int",
            "description": "Defines the type of message."
          },
          {
            "name": "content",
            "type": "String",
            "hints": {
              "primary": true
            },
            "description": "The textual content of the message."
          },
          {
            "name": "channel_id",
            "type": "String",
            "description": "Identifier of the channel where the message was sent."
          },
          {
            "name": "pinned",
            "type": "Boolean",
            "description": "Indicates if the message is pinned to the top of the chat."
          },
          {
            "name": "mention_everyone",
            "type": "Boolean",
            "description": "Specifies whether the message includes a mention that alerts all users."
          },
          {
            "name": "tts",
            "type": "Boolean",
            "description": "Denotes if the message is set to be read aloud through text-to-speech."
          },
          {
            "name": "timestamp",
            "type": "String",
            "description": "The creation time of the message formatted as a timestamp."
          },
          {
            "name": "edited_timestamp",
            "type": "String",
            "description": "The timestamp of the latest edit to the message, if edited."
          },
          {
            "name": "flags",
            "type": "Int",
            "description": "A set of properties for the message, represented by bitwise flags."
          },
          {
            "name": "author",
            "type": "User",
            "description": "The user who authored the message."
          },
          {
            "name": "attachments",
            "type": "Json",
            "ofType": "String",
            "description": "Any files or media attached to the message."
          },
          {
            "name": "embeds",
            "type": "Json",
            "ofType": "String",
            "description": "Rich content elements embedded within the message."
          },
          {
            "name": "mentions",
            "type": "List",
            "ofType": "User",
            "description": "List of users who are mentioned in the message."
          },
          {
            "name": "mention_roles",
            "type": "Json",
            "ofType": "String",
            "description": "Roles within the guild mentioned in the message."
          },
          {
            "name": "reactions",
            "type": "List",
            "ofType": "Reaction",
            "description": "Reactions added to the message by users."
          }
        ],
        "description": ""
      },
      {
        "name": "Member",
        "fields": [
          {
            "name": "user",
            "type": "User",
            "description": "Discord user information associated with this member."
          },
          {
            "name": "nick",
            "hints": {
              "primary": true
            },
            "type": "String",
            "description": "The nickname of the member within the guild."
          },
          {
            "name": "roles",
            "type": "List",
            "ofType": "String",
            "description": "List of role identifiers that the member has in the guild."
          },
          {
            "name": "joined_at",
            "hints": {
              "primary": true
            },
            "type": "String",
            "description": "The timestamp of when the member joined the guild."
          },
          {
            "name": "premium_since",
            "type": "String",
            "description": "Indicates when the member started boosting the guild, if applicable."
          },
          {
            "name": "deaf",
            "type": "Boolean",
            "description": "Whether the member is deafened in voice channels within the guild."
          },
          {
            "name": "mute",
            "type": "Boolean",
            "description": "Whether the member is muted in voice channels in the guild."
          },
          {
            "name": "pending",
            "type": "Boolean",
            "description": "Indicates if the member has passed the guild's membership screening."
          },
          {
            "name": "avatar",
            "type": "String",
            "description": "URL to the member's custom guild avatar if set."
          },
          {
            "name": "flags",
            "type": "Int",
            "description": "Bitwise flags that represent various member attributes and permissions."
          }
        ],
        "description": ""
      },
      {
        "name": "User",
        "fields": [
          {
            "name": "id",
            "type": "String",
            "description": "Discord's unique identifier for the user."
          },
          {
            "name": "username",
            "type": "String",
            "hints": {
              "primary": true
            },
            "description": "The user's chosen username on Discord."
          },
          {
            "name": "display_name",
            "type": "String",
            "description": "The name shown in the user's profile, which may include the nickname if set."
          },
          {
            "name": "avatar",
            "type": "String",
            "description": "URL to the user's profile image or avatar."
          },
          {
            "name": "avatar_decoration",
            "type": "String",
            "description": "Additional visual elements or frames around the user's avatar."
          },
          {
            "name": "discriminator",
            "type": "String",
            "description": "A four-digit number that helps to differentiate users with the same username."
          },
          {
            "name": "public_flags",
            "type": "Int",
            "description": "Flags representing the user's achievements and features on Discord."
          },
          {
            "name": "bot",
            "type": "Boolean",
            "description": "Indicates whether the user is a Discord bot account."
          }
        ],
        "description": ""
      },
      {
        "name": "Reaction",
        "fields": [
          {
            "name": "count",
            "type": "Int"
          },
          {
            "name": "me",
            "type": "Boolean"
          },
          {
            "name": "emoji",
            "type": "Emoji"
          }
        ],
        "description": ""
      },
      {
        "name": "Command",
        "fields": [
          {
            "name": "name",
            "type": "String",
            "hints": {
              "primary": true
            }
          },
          {
            "name": "description",
            "type": "String"
          },
          {
            "name": "default_member_permissions",
            "type": "String"
          },
          {
            "name": "default_permission",
            "type": "Boolean"
          },
          {
            "name": "type",
            "type": "Int"
          },
          {
            "name": "nsfw",
            "type": "Boolean"
          },
          {
            "name": "options",
            "type": "List",
            "ofType": "String"
          }
        ],
        "actions": [
          {
            "name": "delete",
            "type": "Void"
          }
        ],
        "description": ""
      },
      {
        "name": "Emoji",
        "fields": [
          {
            "name": "id",
            "type": "String"
          },
          {
            "name": "user",
            "type": "User"
          },
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "animated",
            "type": "Boolean"
          },
          {
            "name": "available",
            "type": "Boolean"
          },
          {
            "name": "require_colons",
            "type": "Boolean"
          },
          {
            "name": "managed",
            "type": "Boolean"
          },
          {
            "name": "roles",
            "type": "List",
            "ofType": "String"
          }
        ],
        "description": ""
      },
      {
        "name": "SlashCommand",
        "fields": [
          {
            "name": "user",
            "type": "User"
          },
          {
            "name": "application_id",
            "type": "String"
          },
          {
            "name": "token",
            "type": "String"
          },
          {
            "name": "options",
            "type": "String"
          }
        ],
        "description": ""
      },
      {
        "name": "CommandOption",
        "fields": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "type",
            "type": "String"
          },
          {
            "name": "value",
            "type": "String"
          }
        ],
        "description": ""
      },
      {
        "name": "Tests",
        "actions": [
          {
            "name": "testGetGuilds",
            "type": "Boolean"
          },
          {
            "name": "ping",
            "type": "Boolean"
          },
          {
            "name": "testGetUsers",
            "type": "Boolean"
          },
          {
            "name": "testGetChannels",
            "type": "Boolean"
          }
        ],
        "description": ""
      }
    ]
  },
  "dependencies": {
    "http": "http:",
    "endpoint": "sys-process:endpointUrl"
  }
}