{
  "expressions": {
    "guild": {
      "description": "Guild",
      "type": "text",
      "searchIn": "https://discord.com",
      "regex": "data-list-item-id=\"guildsnav___([0-9]{18})+"
    },
    "channel": {
      "description": "Channel",
      "type": "url",
      "searchIn": "https://discord.com",
      "regex": "https://discord.com/channels/([0-9]{18})+/([0-9]{18})+"
    },
    "user": {
      "description": "User",
      "type": "text",
      "searchIn": "https://discord.com",
      "regex": "/avatars/[0-9]+"
    },
    "message": {
      "description": "Channel Message",
      "type": "text",
      "searchIn": "https://discord.com",
      "regex": "id=\"chat-messages-[0-9]+-[0-9]+"
    }
  },
  "schema": {
    "types": [
      {
        "name": "Root",
        "fields": [
          {
            "name": "guilds",
            "type": "GuildCollection",
            "description": "Collection of Discord guilds where the bot is active."
          },
          {
            "name": "me",
            "type": "User",
            "description": "Represents the bot's user profile within Discord."
          },
          {
            "name": "users",
            "type": "UserCollection",
            "description": "Accumulated collection of users that the bot has encountered."
          },
          {
            "name": "parse",
            "type": "List",
            "hints": {
              "hidden": true
            },
            "ofType": {
              "type": "Ref",
              "ofType": "Guild"
            },
            "params": [
              {
                "name": "name",
                "type": "String"
              },
              {
                "name": "value",
                "type": "String"
              }
            ],
            "description": "Interprets the provided name and value as a guild reference in Discord."
          },
          {
            "name": "status",
            "type": "String",
            "description": "Reflects the bot's current operational status."
          },
          {
            "name": "tests",
            "type": "Tests",
            "description": "Comprises tests for ensuring the bot's correct functionality."
          }
        ],
        "actions": [
          {
            "name": "configure",
            "type": "Void",
            "params": [
              {
                "name": "clientId",
                "type": "String",
                "optional": true
              },
              {
                "name": "clientSecret",
                "type": "String",
                "optional": true
              },
              {
                "name": "publicKey",
                "type": "String",
                "optional": true
              },
              {
                "name": "token",
                "type": "String",
                "optional": true
              }
            ],
            "description": "Sets up the necessary configurations for the Discord Bot such as clientId, clientSecret, publicKey, and token."
          },
          {
            "name": "followUpWebhook",
            "type": "Void",
            "params": [
              {
                "name": "application_id",
                "type": "String"
              },
              {
                "name": "token",
                "type": "String"
              },
              {
                "name": "message",
                "type": "Json"
              }
            ],
            "description": "Sends a follow-up message to an interaction using a webhook."
          }
        ],
        "description": ""
      },
      {
        "name": "MemberCollection",
        "fields": [
          {
            "name": "one",
            "type": "Member",
            "params": [
              {
                "name": "id",
                "type": "String"
              }
            ],
            "description": "Fetches a specific member using their Discord identifier."
          },
          {
            "name": "page",
            "type": "MemberPage",
            "params": [
              {
                "name": "limit",
                "type": "Int",
                "optional": true
              },
              {
                "name": "after",
                "type": "String",
                "optional": true
              }
            ],
            "description": "Acquires a segment of members with optional quantity and pagination controls."
          }
        ],
        "description": ""
      },
      {
        "name": "MemberPage",
        "fields": [
          {
            "name": "items",
            "type": "List",
            "ofType": "Member",
            "description": "The collection of members within this page."
          },
          {
            "name": "next",
            "type": "Ref",
            "ofType": "MemberPage",
            "description": "Link to the subsequent page of members if available."
          }
        ],
        "description": ""
      },
      {
        "name": "CommandCollection",
        "fields": [
          {
            "name": "one",
            "type": "Command",
            "params": [
              {
                "name": "id",
                "type": "String"
              }
            ],
            "description": "Obtains a command using its unique Discord ID."
          },
          {
            "name": "items",
            "type": "List",
            "ofType": "Command",
            "description": "Contains all commands available to the bot."
          }
        ],
        "description": ""
      },
      {
        "name": "UserCollection",
        "fields": [
          {
            "name": "one",
            "type": "User",
            "params": [
              {
                "name": "id",
                "type": "String"
              }
            ],
            "description": "Acquires a user profile based on their Discord identifier."
          }
        ],
        "description": ""
      },
      {
        "name": "GuildCollection",
        "fields": [
          {
            "name": "one",
            "type": "Guild",
            "params": [
              {
                "name": "id",
                "type": "String"
              }
            ],
            "description": "Fetches details of a specific guild by its Discord ID."
          },
          {
            "name": "items",
            "type": "List",
            "ofType": "Guild",
            "description": "Compiles a list of guilds where the bot is present."
          }
        ],
        "description": ""
      },
      {
        "name": "Guild",
        "fields": [
          {
            "name": "id",
            "type": "String",
            "description": "Unique identifier for the Discord guild."
          },
          {
            "name": "name",
            "type": "String",
            "hints": {
              "primary": true
            },
            "description": "The official name of the Discord guild."
          },
          {
            "name": "icon",
            "type": "String",
            "description": "URL to the guild's icon image."
          },
          {
            "name": "owner",
            "type": "Boolean",
            "description": "Indicates if the bot is the owner of the guild."
          },
          {
            "name": "permissions",
            "type": "Int",
            "description": "Numerical value representing the permissions the bot has in the guild."
          },
          {
            "name": "features",
            "type": "List",
            "ofType": "String",
            "description": "A list of special features available in the guild."
          },
          {
            "name": "channels",
            "type": "ChannelCollection",
            "description": "Collection of channels within the guild."
          },
          {
            "name": "commands",
            "type": "CommandCollection",
            "description": "Collection of custom bot commands specific to the guild."
          },
          {
            "name": "members",
            "type": "MemberCollection",
            "description": "Collection of guild members."
          }
        ],
        "actions": [
          {
            "name": "createCommand",
            "type": "Void",
            "params": [
              {
                "name": "name",
                "type": "String"
              },
              {
                "name": "description",
                "type": "String",
                "optional": true
              },
              {
                "name": "options",
                "description": "",
                "type": "Json",
                "optional": true
              },
              {
                "name": "type",
                "type": "Int",
                "optional": true
              }
            ],
            "description": "Creates a new command in the guild with the given details, including name, description, options, and command type."
          }
        ],
        "events": [
          {
            "name": "onSlashCommand",
            "type": "SlashCommand"
          }
        ],
        "description": ""
      },
      {
        "name": "ChannelCollection",
        "fields": [
          {
            "name": "one",
            "type": "Channel",
            "params": [
              {
                "name": "id",
                "type": "String"
              }
            ],
            "description": "Fetches a particular channel using its Discord ID."
          },
          {
            "name": "items",
            "type": "List",
            "ofType": "Channel",
            "description": "Compiles all accessible channels, including guild and direct message channels."
          }
        ],
        "description": ""
      },
      {
        "name": "MessageCollection",
        "fields": [
          {
            "name": "one",
            "type": "Message",
            "params": [
              {
                "name": "id",
                "type": "String"
              }
            ],
            "description": "Obtains a single message using its unique Discord ID."
          },
          {
            "name": "items",
            "type": "List",
            "ofType": "Message",
            "params": [
              {
                "name": "limit",
                "type": "Int",
                "optional": true
              },
              {
                "name": "around",
                "type": "String",
                "optional": true
              },
              {
                "name": "before",
                "type": "String",
                "optional": true
              },
              {
                "name": "after",
                "type": "String",
                "optional": true
              }
            ],
            "description": "Fetches messages with options for quantity and relative positioning constraints."
          }
        ],
        "description": ""
      },
      {
        "name": "Channel",
        "fields": [
          {
            "name": "id",
            "type": "String",
            "description": "Unique identifier of the Discord channel."
          },
          {
            "name": "last_message_id",
            "type": "String",
            "description": "ID of the most recent message in the channel."
          },
          {
            "name": "rate_limit_per_user",
            "type": "Int",
            "description": "The send rate limit for users in the channel."
          },
          {
            "name": "name",
            "type": "String",
            "hints": {
              "primary": true
            },
            "description": "The designated name of the channel."
          },
          {
            "name": "type",
            "type": "Int",
            "description": "The type of channel, such as text, voice, etc."
          },
          {
            "name": "position",
            "type": "Int",
            "description": "Position of the channel within the channel list."
          },
          {
            "name": "flags",
            "type": "Int",
            "description": "Channel features indicated by bitwise flags."
          },
          {
            "name": "nsfw",
            "type": "Boolean",
            "description": "Marks if the channel is not safe for work (NSFW)."
          },
          {
            "name": "parend_id",
            "type": "String",
            "description": "The ID of the parent category this channel is under."
          },
          {
            "name": "topic",
            "type": "String",
            "description": "Topic or description of the channel."
          },
          {
            "name": "guild_id",
            "type": "String",
            "description": "ID of the guild to which the channel belongs."
          },
          {
            "name": "permissions_overwrites",
            "type": "List",
            "ofType": "String",
            "description": "Overrides for channel-specific permissions."
          },
          {
            "name": "messages",
            "type": "MessageCollection",
            "description": "Access to the collection of messages in the channel."
          }
        ],
        "actions": [
          {
            "name": "sendMessage",
            "type": "Void",
            "params": [
              {
                "name": "content",
                "description": "",
                "type": "String"
              },
              {
                "name": "payload_json",
                "description": "",
                "type": "String",
                "optional": true
              },
              {
                "name": "tts",
                "type": "Boolean",
                "optional": true
              },
              {
                "name": "flags",
                "type": "Int",
                "optional": true
              },
              {
                "name": "sticker_ids",
                "description": "",
                "type": "String",
                "optional": true
              },
              {
                "name": "components",
                "description": "",
                "type": "String",
                "optional": true
              },
              {
                "name": "embeds",
                "description": "",
                "type": "String",
                "optional": true
              }
            ],
            "description": "Sends a message to the channel, with optional parameters such as content, payload_json, tts, flags, sticker_ids, components, and embeds."
          }
        ],
        "description": ""
      },
      {
        "name": "Message",
        "fields": [
          {
            "name": "id",
            "type": "String",
            "description": "The unique identifier of the message."
          },
          {
            "name": "type",
            "type": "Int",
            "description": "Defines the type of message."
          },
          {
            "name": "content",
            "type": "String",
            "hints": {
              "primary": true
            },
            "description": "The textual content of the message."
          },
          {
            "name": "channel_id",
            "type": "String",
            "description": "Identifier of the channel where the message was sent."
          },
          {
            "name": "pinned",
            "type": "Boolean"
          },
          {
            "name": "mention_everyone",
            "type": "Boolean"
          },
          {
            "name": "tts",
            "type": "Boolean"
          },
          {
            "name": "timestamp",
            "type": "String"
          },
          {
            "name": "edited_timestamp",
            "type": "String"
          },
          {
            "name": "flags",
            "type": "Int"
          },
          {
            "name": "author",
            "type": "User",
            "description": ""
          },
          {
            "name": "attachments",
            "type": "Json",
            "ofType": "String"
          },
          {
            "name": "embeds",
            "type": "Json",
            "ofType": "String"
          },
          {
            "name": "mentions",
            "type": "List",
            "ofType": "User"
          },
          {
            "name": "mention_roles",
            "type": "Json",
            "ofType": "String"
          },
          {
            "name": "reactions",
            "type": "List",
            "ofType": "Reaction"
          }
        ],
        "description": ""
      },
      {
        "name": "Member",
        "fields": [
          {
            "name": "user",
            "type": "User",
            "description": ""
          },
          {
            "name": "nick",
            "hints": {
              "primary": true
            },
            "type": "String",
            "description": ""
          },
          {
            "name": "roles",
            "type": "List",
            "ofType": "String",
            "description": ""
          },
          {
            "name": "joined_at",
            "hints": {
              "primary": true
            },
            "type": "String",
            "description": ""
          },
          {
            "name": "premium_since",
            "type": "String",
            "description": ""
          },
          {
            "name": "deaf",
            "type": "Boolean",
            "description": ""
          },
          {
            "name": "mute",
            "type": "Boolean",
            "description": ""
          },
          {
            "name": "pending",
            "type": "Boolean",
            "description": ""
          },
          {
            "name": "avatar",
            "type": "String",
            "description": ""
          },
          {
            "name": "flags",
            "type": "Int",
            "description": ""
          }
        ],
        "description": ""
      },
      {
        "name": "User",
        "fields": [
          {
            "name": "id",
            "type": "String"
          },
          {
            "name": "username",
            "type": "String",
            "hints": {
              "primary": true
            }
          },
          {
            "name": "display_name",
            "type": "String"
          },
          {
            "name": "avatar",
            "type": "String"
          },
          {
            "name": "avatar_decoration",
            "type": "String"
          },
          {
            "name": "discriminator",
            "type": "String"
          },
          {
            "name": "public_flags",
            "type": "Int"
          },
          {
            "name": "bot",
            "type": "Boolean"
          }
        ],
        "description": ""
      },
      {
        "name": "Reaction",
        "fields": [
          {
            "name": "count",
            "type": "Int"
          },
          {
            "name": "me",
            "type": "Boolean"
          },
          {
            "name": "emoji",
            "type": "Emoji"
          }
        ],
        "description": ""
      },
      {
        "name": "Command",
        "fields": [
          {
            "name": "name",
            "type": "String",
            "hints": {
              "primary": true
            }
          },
          {
            "name": "description",
            "type": "String"
          },
          {
            "name": "default_member_permissions",
            "type": "String"
          },
          {
            "name": "default_permission",
            "type": "Boolean"
          },
          {
            "name": "type",
            "type": "Int"
          },
          {
            "name": "nsfw",
            "type": "Boolean"
          },
          {
            "name": "options",
            "type": "List",
            "ofType": "String"
          }
        ],
        "actions": [
          {
            "name": "delete",
            "type": "Void"
          }
        ],
        "description": ""
      },
      {
        "name": "Emoji",
        "fields": [
          {
            "name": "id",
            "type": "String"
          },
          {
            "name": "user",
            "type": "User"
          },
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "animated",
            "type": "Boolean"
          },
          {
            "name": "available",
            "type": "Boolean"
          },
          {
            "name": "require_colons",
            "type": "Boolean"
          },
          {
            "name": "managed",
            "type": "Boolean"
          },
          {
            "name": "roles",
            "type": "List",
            "ofType": "String"
          }
        ],
        "description": ""
      },
      {
        "name": "SlashCommand",
        "fields": [
          {
            "name": "user",
            "type": "User"
          },
          {
            "name": "application_id",
            "type": "String"
          },
          {
            "name": "token",
            "type": "String"
          },
          {
            "name": "options",
            "type": "String"
          }
        ],
        "description": ""
      },
      {
        "name": "CommandOption",
        "fields": [
          {
            "name": "name",
            "type": "String"
          },
          {
            "name": "type",
            "type": "String"
          },
          {
            "name": "value",
            "type": "String"
          }
        ],
        "description": ""
      },
      {
        "name": "Tests",
        "actions": [
          {
            "name": "testGetGuilds",
            "type": "Boolean"
          },
          {
            "name": "ping",
            "type": "Boolean"
          },
          {
            "name": "testGetUsers",
            "type": "Boolean"
          },
          {
            "name": "testGetChannels",
            "type": "Boolean"
          }
        ],
        "description": ""
      }
    ]
  },
  "dependencies": {
    "http": "http:",
    "endpoint": "sys-process:endpointUrl"
  }
}